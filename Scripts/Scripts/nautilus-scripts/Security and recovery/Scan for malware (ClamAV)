#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local std_output=""

    # Execute initial checks.
    if _command_exists "clamscan"; then
        _check_dependencies ""
    else
        _check_dependencies "command=clamscan; package=clamav"
        # Update ClamAV database.
        _display_wait_box_message "Updating ClamAV database. Please, wait..."
        pkexec bash -c "sudo rm -f /var/log/clamav/freshclam.log; sudo freshclam --quiet"
        _close_wait_box
    fi
    _display_wait_box "2"
    input_files=$(_get_files "par_type=all; par_get_pwd=true")

    _main_task "$input_files"

    local std_output=""
    std_output=$(_storage_text_read_all)
    std_output=$(_text_sort "$std_output")

    _display_list_box "$std_output" "--column=Malware;--column=File" "infected files"
}

_main_task() {
    local input_files=$1
    local std_output=""
    local exit_code=0

    # Run the main process.
    # shellcheck disable=SC2086
    std_output=$(clamscan --recursive --stdout --infected --no-summary -- $input_files 2>&1)
    exit_code=$?

    # NOTE: ClamAV returns exit code 1 if it encounters an application error or detects malware.
    if ! grep --quiet --ignore-case "FOUND$" <<<"$std_output"; then
        _check_output "$exit_code" "$std_output" "" "" || return 1
    fi

    std_output=$(grep "^/" <<<"$std_output")
    std_output=$(_text_remove_pwd "$std_output")
    # shellcheck disable=SC2001
    std_output=$(sed "s| FOUND$||" <<<"$std_output")
    # shellcheck disable=SC2001
    std_output=$(sed "s|: |$FIELD_SEPARATOR|" <<<"$std_output")
    # shellcheck disable=SC2001
    std_output=$(sed "s|\(.*\)$FIELD_SEPARATOR\(.*\)|\2$FIELD_SEPARATOR\1|g" <<<"$std_output")

    _storage_text_write_ln "$std_output"
}

_main "$@"
